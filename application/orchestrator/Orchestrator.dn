component provides Orchestrator requires face_anonymizer.FaceAnonymizer anonymizer, vehicle_flow_measurer.VehicleFlowMeasurer flowMeasurer, vehicle_flow_measurer.VehicleSpeedMeasurer speedMeasurer, ui.Image, data_collector.DataCollectorManager dataCollector {

  void Orchestrator:processImage(Image inputImage, ImageMetadata imageMetadata){

    FaceAnonymizerResult anonymizerResult = anonymizer.anonymizeFaces(inputImage, imageMetadata)

    Image framesArray[] = new Image[5]
    ImageMetadata metadataArray[] = new ImageMetadata[5]

    for(int i = 0 ; i < framesArray.arrayLength ; i++){
      framesArray[i] = anonymizerResult.anonymizedImage
    }

    for(int i = 0 ; i < metadataArray.arrayLength ; i++){
      metadataArray[i] = imageMetadata
    }

    int numberOfCars = flowMeasurer.measureFlow(anonymizerResult.anonymizedImage, framesArray, metadataArray)

    dataCollector.storeData(imageMetadata.numberOfFaces, imageMetadata.numberOfCars)

  }

}
